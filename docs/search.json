[
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "Collin Real Contributed to this exercise\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats.\nWarning: package 'here' was built under R version 4.3.3"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "General Background Information",
    "text": "General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Description of data and data source",
    "text": "Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section.\nThe original data is a simple made-up data-set in an Excel file which is exampledata.xlsx.The dataset contains the variables Height, weight and Gender columns of a few imaginary individuals.It is a small dataset with 15 rows and 3 columns.The dataset purposefully contains some faulty entries that need to be cleaned. The data is used to demonstrate the analysis of the data using R. I have added 2 columns to the data which are Income and Eye Color. The data is saved as exampledata2.xlsx. I also added descriptions for the new variables to the codebook sheet in the excel file."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Data aquisition",
    "text": "Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Statistical analysis",
    "text": "Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Exploratory/Descriptive analysis",
    "text": "Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1.0\nFALSE\n3\nF: 4, M: 4, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nEye Color\n0\n1.0\nFALSE\n5\nblu: 4, bro: 2, haz: 2, bla: 1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1.0\nNA\nNA\nNA\n165.60000\n15.06431\n133\n158.25\n166\n177.25\n183\n▂▁▃▆▇\n\n\nnumeric\nWeight\n1\n0.9\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55.00\n70\n80.00\n110\n▇▂▃▂▂\n\n\nnumeric\nIncome\n0\n1.0\nNA\nNA\nNA\n87000.00000\n14613.54014\n60000\n81250.00\n87000\n95750.00\n110000\n▅▂▇▇▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Full analysis",
    "text": "Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Strengths and Limitations",
    "text": "Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "Conclusions",
    "text": "Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better.\n\n\n\n\n\n\nFigure 2: Height and weight stratified by gender.\n\n\n\n\nThe Boxplot shows the distribution of each section of Eye color:\n1.Black Eye Color: Broad range of heights with a median around 170cm implicating that High Variability in height among individuals with black eyes.\n2.Blue Eye Color: Narrow range around a median of 165cm implicating that Heights are more consistent among those blue eyes.\n3.Brown Eye Color:Highest median height below 170 cm ,with narrow variation implicating that Generally taller, with less height variability compared to black eyes.\n4.Green Eye Color:Median near 165cm, very tight range implicating that compact height distribution, showing strong central tendency.\n5.Hazel Eye Color:Median similar to green eyes, with a broader range implicating moderate variability,with heights centered around the median.\n\n\n\n\n\nFigure 3: Height and weight stratified by gender.\n\n\n\n\nThe scatter plot displays the relationship between weight(X-axis) and income(y-axis).The data points are widely dispersed without a clear trend, indicating that there is nos significant relationship or dependency between the weight of individuals and their income in this particular dataset.\n\n\n\n\nTable 3: Linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n195.0790698\n42.8951725\n4.5478094\n0.0104350\n\n\nIncome\n-0.0004279\n0.0004122\n-1.0380663\n0.3578676\n\n\nEye Colorblue\n15.6825581\n18.6712442\n0.8399311\n0.4482183\n\n\nEye Colorbrown\n-2.2069767\n20.7739821\n-0.1062375\n0.9205086\n\n\nEye Colorgreen\n-0.9953488\n23.5865057\n-0.0421999\n0.9683618\n\n\nEye Colorhazel\n10.0837209\n21.6599511\n0.4655468\n0.6657578\n\n\n\n\n\n\nThe regression results indicate that height is modeled with income and eye color as predictors show that 1.Intercept(195, p-value=0.0104): The intercept represents the estimated height when all the predictors are zero.The sisgnificant p-value indicates that this base height is statistically significant.\n2.Income (0.000428, p-value = 0.358): The coefficient for income indicates that for each unit increase in income, height is expected to increase by approximately 0.000428 units. The p-value suggests that this effect is not statistically significant, implying there might be no strong linear relationship between income and height.\n3.Eye Color Blue (-15.7, p-value = 0.448): This coefficient suggests that individuals with blue eyes are, on average, 15.7 units shorter than the reference eye color category. The high p-value indicates that this difference is not statistically significant.\n4.Eye Color Brown (-2.21, p-value = 0.921): Similar to blue, having brown eyes correlates with being 2.21 units shorter than the reference group, but this is also not statistically significant.\n5.Eye Color Green (-0.95, p-value = 0.966): This result suggests almost no difference in height compared to the reference eye color, and the effect is not statistically significant.\n6.Eye Color Hazel (10.1, p-value = 0.666): This suggests that individuals with hazel eyes are on average 10.1 units taller than the reference group, although this is not statistically significant.\nThe model suggests that neither income nor eye color has a statistically significant effect on height, based on the p-values associated with each predictor. This implies that variations in height within this dataset are likely due to factors not included in this model. The overall effectiveness of the model in predicting height based on these variables might be limited, indicating potential need for considering other variables or a different modeling approach. # References"
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/sriganni-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Income          Individual Income in usd              numeric value &gt;0 or NA  \n5 Eye Color       person's eye color                    brown/blue/green/black/…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height      &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"1…\n$ Weight      &lt;chr&gt; \"80\", \"70\", \"60\", \"76\", \"90\", \"55\", \"90\", \"110\", \"54\", \"70…\n$ Gender      &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F…\n$ Income      &lt;dbl&gt; 70000, 80000, 90000, 95000, 75000, 85000, 89000, 85000, 92…\n$ `Eye Color` &lt;chr&gt; \"brown\", \"blue\", \"green\", \"hazel\", \"black\", \"blue\", \"green…\n\nsummary(rawdata)\n\n    Height             Weight             Gender              Income      \n Length:14          Length:14          Length:14          Min.   : 60000  \n Class :character   Class :character   Class :character   1st Qu.: 78500  \n Mode  :character   Mode  :character   Mode  :character   Median : 87000  \n                                                          Mean   : 86071  \n                                                          3rd Qu.: 94250  \n                                                          Max.   :110000  \n  Eye Color        \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender Income `Eye Color`\n  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;      \n1 180    80     M       70000 brown      \n2 175    70     O       80000 blue       \n3 sixty  60     F       90000 green      \n4 178    76     F       95000 hazel      \n5 192    90     NA      75000 black      \n6 6      55     F       85000 blue       \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nWeight\n0\n1\n2\n4\n0\n12\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEye Color\n0\n1\n4\n5\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nIncome\n0\n1\n86071.43\n12916.68\n60000\n78500\n87000\n94250\n110000\n▃▆▇▇▂\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nWeight\n0\n1\n2\n4\n0\n11\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEye Color\n0\n1\n4\n5\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n151.62\n46.46\n6\n154\n165\n175\n192\n▁▁▁▂▇\n\n\nIncome\n0\n1\n85769.23\n13392.50\n60000\n78000\n85000\n95000\n110000\n▃▆▆▇▂\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nWeight\n0\n1\n2\n4\n0\n11\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEye Color\n0\n1\n4\n5\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.23\n16.52\n133\n155\n166\n178\n192\n▂▇▆▆▃\n\n\nIncome\n0\n1\n85769.23\n13392.50\n60000\n78000\n85000\n95000\n110000\n▃▆▆▇▂\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n12\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nWeight\n0\n1\n2\n3\n0\n10\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEye Color\n0\n1\n4\n5\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n166.92\n16.04\n133\n155.75\n166\n178.5\n192\n▂▇▇▇▅\n\n\nIncome\n0\n1\n86416.67\n13773.88\n60000\n78750.00\n87000\n95250.0\n110000\n▃▃▆▇▂\n\n\n\n\ndplyr::glimpse(d3)\n\nRows: 12\nColumns: 5\n$ Height      &lt;dbl&gt; 180, 175, 178, 192, 183, 156, 166, 155, 165, 133, 166, 154\n$ Weight      &lt;chr&gt; \"80\", \"70\", \"76\", \"90\", \"55\", \"90\", \"110\", \"54\", \"NA\", \"45…\n$ Gender      &lt;chr&gt; \"M\", \"O\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"F\", \"F\", \"M\", \"M\"\n$ Income      &lt;dbl&gt; 70000, 80000, 95000, 75000, 85000, 89000, 85000, 92000, 11…\n$ `Eye Color` &lt;chr&gt; \"brown\", \"blue\", \"hazel\", \"black\", \"blue\", \"green\", \"blue\"…\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nd3$Weight &lt;- as.numeric(d3$Weight)\n\nWarning: NAs introduced by coercion\n\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n12\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEye Color\n0\n1\n4\n5\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nF: 4, M: 4, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n166.92\n16.04\n133\n155.75\n166\n178.5\n192\n▂▇▇▇▅\n\n\nWeight\n1\n0.92\n70.45\n20.65\n45\n54.50\n70\n85.0\n110\n▇▂▃▃▂\n\n\nIncome\n0\n1.00\n86416.67\n13773.88\n60000\n78750.00\n87000\n95250.0\n110000\n▃▃▆▇▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n10\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEye Color\n0\n1\n4\n5\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nF: 4, M: 4, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.0\n165.60\n15.06\n133\n158.25\n166\n177.25\n183\n▂▁▃▆▇\n\n\nWeight\n1\n0.9\n70.11\n21.25\n45\n55.00\n70\n80.00\n110\n▇▂▃▂▂\n\n\nIncome\n0\n1.0\n87000.00\n14613.54\n60000\n81250.00\n87000\n95750.00\n110000\n▅▂▇▇▂\n\n\n\n\ndplyr::glimpse(d4)\n\nRows: 10\nColumns: 5\n$ Height      &lt;dbl&gt; 180, 175, 178, 183, 156, 166, 165, 133, 166, 154\n$ Weight      &lt;dbl&gt; 80, 70, 76, 55, 90, 110, NA, 45, 55, 50\n$ Gender      &lt;fct&gt; M, O, F, F, O, M, F, F, M, M\n$ Income      &lt;dbl&gt; 70000, 80000, 95000, 85000, 89000, 85000, 110000, 100000, …\n$ `Eye Color` &lt;chr&gt; \"brown\", \"blue\", \"hazel\", \"blue\", \"green\", \"blue\", \"blue\",…\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/sriganni-P2-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  4     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate    mean       sd    p0   p25   p50   p75\n1 Height                0             1   166.     16.0    133   156   166   178\n2 Weight                0             1    70.1    21.2     45    55    70    80\n3 Income                0             1 84444.  12914.   60000 80000 85000 95000\n4 BMI                   0             1    25.7     6.96    19    22    23    25\n    p100 hist \n1    183 ▂▁▃▃▇\n2    110 ▇▂▃▂▂\n3 100000 ▂▂▂▇▇\n4     39 ▇▃▁▁▃\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Placeholder file for the future data/results presentation exercise."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "The analysis indicates that there is no significant correlation between population size and life expectancy among African countries for the year 2000. This suggests that other factors not included in this model might be more influential in determining life expectancy.\n\n\n\n\n\n\nlibrary(\"dslabs\")\n\nWarning: package 'dslabs' was built under R version 4.4.0"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#regression-analysis-life-expectancy-vs.-infant-mortality-2000",
    "href": "coding-exercise/coding-exercise.html#regression-analysis-life-expectancy-vs.-infant-mortality-2000",
    "title": "R Coding Exercise",
    "section": "Regression Analysis: Life Expectancy vs. Infant Mortality (2000)",
    "text": "Regression Analysis: Life Expectancy vs. Infant Mortality (2000)\n\nObjective\nThe goal was to analyze the impact of infant mortality on life expectancy among African countries in the year 2000.\n\n\nMethodology\nA linear regression model was fitted with life expectancy as the dependent variable and infant mortality as the predictor.\n\n\nResults\n\nModel Coefficients:\n\nIntercept: The model estimates a life expectancy of 71.29 years when the infant mortality rate is zero.\nInfant Mortality Coefficient: The negative coefficient of -0.18916 indicates that as infant mortality increases by one unit, life expectancy decreases by approximately 0.189 years.\n\nStatistical Significance:\n\nThe p-value for the infant mortality coefficient is extremely low (&lt; 2.83e-08), suggesting a statistically significant negative impact of infant mortality on life expectancy.\n\nModel Fit:\n\nThe R-squared value of 0.4701 implies that about 47.01% of the variability in life expectancy across the dataset can be explained by differences in infant mortality rates.\nThe residual standard error of 6.221 indicates the average deviation of the observed life expectancies from the values predicted by the model.\n\n\n\n\nConclusion\nThe analysis confirms a significant negative correlation between infant mortality and life expectancy for the year 2000 in African countries. This suggests that policies aimed at reducing infant mortality could be effective in increasing life expectancy."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#regression-analysis-life-expectancy-vs.-population-size-2000",
    "href": "coding-exercise/coding-exercise.html#regression-analysis-life-expectancy-vs.-population-size-2000",
    "title": "R Coding Exercise",
    "section": "Regression Analysis: Life Expectancy vs. Population Size (2000)",
    "text": "Regression Analysis: Life Expectancy vs. Population Size (2000)\n\nObjective\nThe aim was to explore whether the size of a population in African countries in the year 2000 impacts life expectancy.\n\n\nMethodology\nA linear regression model was employed with life expectancy as the outcome and the population size as the predictor.\n\n\nResults\n\nModel Coefficients:\n\nIntercept: The model predicts a base life expectancy of 5593 years, adjusting for population size.\nLog(Population) Coefficient: The coefficient of 2.756e-08 suggests a negligible change in life expectancy with increasing population size.\n\nStatistical Significance:\n\nThe p-value for the log of population size is 0.6159, indicating that this model does not find a statistically significant impact of population size on life expectancy.\n\nModel Fit:\n\nThe R-squared value is only 0.005176, highlighting that population size explains a very small fraction of the variability in life expectancy.\nThe negative adjusted R-squared value suggests that the model does not adequately predict life expectancy and might perform worse than a model with no predictors at all.\n\n\n\n\nConclusion\nThe analysis indicates that there is no significant correlation between population size and life expectancy among African countries for the year 2000. This suggests that other factors not included in this model might be more influential in determining life expectancy."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#this-section-is-contributed-by-joaquin-ramirez",
    "href": "coding-exercise/coding-exercise.html#this-section-is-contributed-by-joaquin-ramirez",
    "title": "R Coding Exercise",
    "section": "This section is contributed by JOAQUIN RAMIREZ",
    "text": "This section is contributed by JOAQUIN RAMIREZ\n\n# Loading ggplot2 package for data visualization\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n# In order to determine what datasets are available in the dslabs package (use code below)\n# data(package = \"dslabs\")\n\nAfter reviewing the datasets available, I selected the “temp_carbon” dataset for further exploration. This dataset contains global temperature anomaly data and carbon emissions from the years 1751 through 2018. The goal of this analysis is to examine the relationship between global temperature anomalies and carbon emissions over this extensive time period.\n\n# Loads the temp_carbon dataset from the dslabs package\ndata(\"temp_carbon\")\n\n\n# This provides an overview of the data types and number of observations\nstr(temp_carbon)\n\n'data.frame':   268 obs. of  5 variables:\n $ year            : num  1880 1881 1882 1883 1884 ...\n $ temp_anomaly    : num  -0.11 -0.08 -0.1 -0.18 -0.26 -0.25 -0.24 -0.28 -0.13 -0.09 ...\n $ land_anomaly    : num  -0.48 -0.4 -0.48 -0.66 -0.69 -0.56 -0.51 -0.47 -0.41 -0.31 ...\n $ ocean_anomaly   : num  -0.01 0.01 0 -0.04 -0.14 -0.17 -0.17 -0.23 -0.05 -0.02 ...\n $ carbon_emissions: num  236 243 256 272 275 277 281 295 327 327 ...\n\n# View the summary statistics of the temp_carbon dataset.\nsummary(temp_carbon)\n\n      year       temp_anomaly     land_anomaly      ocean_anomaly     \n Min.   :1751   Min.   :-0.450   Min.   :-0.69000   Min.   :-0.46000  \n 1st Qu.:1818   1st Qu.:-0.180   1st Qu.:-0.31500   1st Qu.:-0.17000  \n Median :1884   Median :-0.030   Median :-0.05000   Median :-0.01000  \n Mean   :1884   Mean   : 0.060   Mean   : 0.07086   Mean   : 0.05273  \n 3rd Qu.:1951   3rd Qu.: 0.275   3rd Qu.: 0.30500   3rd Qu.: 0.25500  \n Max.   :2018   Max.   : 0.980   Max.   : 1.50000   Max.   : 0.79000  \n                NA's   :129      NA's   :129        NA's   :129       \n carbon_emissions \n Min.   :   3.00  \n 1st Qu.:  13.75  \n Median : 264.00  \n Mean   :1522.98  \n 3rd Qu.:1431.50  \n Max.   :9855.00  \n NA's   :4        \n\n\nThe “temp_carbon” dataset contain 268 observations of 5 variables: year, temp_anomaly, land_anomaly, ocean_anomaly, and carbon_emissions. The dataset also contains some missing values (NAs) which will be removed before further analysis.\n\n# This gives a quick glance at the dataset.\nhead(temp_carbon)\n\n  year temp_anomaly land_anomaly ocean_anomaly carbon_emissions\n1 1880        -0.11        -0.48         -0.01              236\n2 1881        -0.08        -0.40          0.01              243\n3 1882        -0.10        -0.48          0.00              256\n4 1883        -0.18        -0.66         -0.04              272\n5 1884        -0.26        -0.69         -0.14              275\n6 1885        -0.25        -0.56         -0.17              277\n\n\n\n# Checking for missing values in the dataset\nsum(is.na(temp_carbon))\n\n[1] 391\n\n# Removing NA's values\ntemp_carbon &lt;- na.omit(temp_carbon)\n\n\n# Plotting the Global Carbon Emissions \nggplot(temp_carbon, aes(x = year, y = carbon_emissions)) +\n  geom_line() +  # Using a line plot to show the trend of carbon emissions\n  labs(title = \"Global temperature anomaly and carbon emissions, 1751-2018\", x = \"Year\", y = \"Carbon Emissions\")  \n\n\n\n# Fiting a linear regression model with carbon emissions as the outcome and year as the predictor\nfit_carbon &lt;- lm(carbon_emissions ~ year, data = temp_carbon)\n\n\nsummary(fit_carbon) # The summary of the linear regression model\n\n\nCall:\nlm(formula = carbon_emissions ~ year, data = temp_carbon)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1653.40  -972.22    58.83   582.55  2546.03 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -1.240e+05  4.467e+03  -27.75   &lt;2e-16 ***\nyear         6.518e+01  2.294e+00   28.42   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1039 on 133 degrees of freedom\nMultiple R-squared:  0.8586,    Adjusted R-squared:  0.8575 \nF-statistic: 807.4 on 1 and 133 DF,  p-value: &lt; 2.2e-16\n\n\n\n# Plotting the fitted linear regression line for carbon emissions\nggplot(temp_carbon, aes(x = year, y = carbon_emissions)) +\n  geom_line() +  # Using a line plot to show the trend of carbon emissions\n  geom_abline(slope = fit_carbon$coefficients[2], intercept = fit_carbon$coefficients[1], col = \"red\") +  # Adding a regression line\n  labs(title = \"Linear Regression: Year vs Carbon Emissions\", x = \"Year\", y = \"Carbon Emissions \")  \n\n\n\n\nAs we can observe in the plotted graph, there seems to be an increase in Carbon emissions. This is confirmed by the linear regression model. The high R-squared value only further confirms that the model explains a large portion of the variance in carbon emissions. The high levels of Carbon emissions seem to really begin to take off during WWII.\nNote: The red regression line represents the relationship between year and carbon emissions modeled by the linear regression analysis above.\n\n# Plotting the Global Temperature over Time\nggplot(temp_carbon, aes(x = year, y = temp_anomaly)) +\n  geom_line() +  # Ussing a line plot to show the trend of temperature over time\n  labs(title = \"Global Temperature Over Time\", x = \"Year\", y = \"Temperature\")\n\n\n\n# Fit a linear regression model to help understand the trend of temperature anomalies over time\nfit_temp &lt;- lm(temp_anomaly ~ year, data = temp_carbon)\n\n\n# Viewing the summary of the linear regression model\nsummary(fit_temp)\n\n\nCall:\nlm(formula = temp_anomaly ~ year, data = temp_carbon)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.30153 -0.11563 -0.01885  0.10930  0.33240 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -1.316e+01  6.560e-01  -20.07   &lt;2e-16 ***\nyear         6.778e-03  3.368e-04   20.12   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1525 on 133 degrees of freedom\nMultiple R-squared:  0.7528,    Adjusted R-squared:  0.7509 \nF-statistic: 404.9 on 1 and 133 DF,  p-value: &lt; 2.2e-16\n\n\n\n# This plot represents the relationship modeled by the linear regression\nggplot(temp_carbon, aes(x = year, y = temp_anomaly)) +\n  geom_line() +  # adding the line plot to show the trend of temperature anomalies over time\n  geom_abline(slope = fit_temp$coefficients[2], intercept = fit_temp$coefficients[1], col = \"red\") +  # This adds the regression line on the graph\n  labs(title = \"Linear Regression: Year vs Temperature Anomaly\", x = \"Year\", y = \"Temperature\")  \n\n\n\n\nAs observed in the plotted graph, temperatures have noticeably increased over time. This upward trend is cause by the surge in carbon emissions. The high R-squared value of 0.7528 suggests a strong relationship between year and temperature anomaly. Additionally, the low p-value (&lt; 2.2e-16) confirms the statistical significance of this relationship, suggesting that the year is a significant predictor of temperature.\nNote: The red line in the plot provides a visual representation of the linear regression model’s prediction of how temperature anomaly changes with each passing year\nIn conclusion, after further analysis and using visualization with linear regression models, I can confirm there exist a significant relationship between increasing carbon emissions and rising temperatures. The linear regression model indicates that temperatures changes on average of 0.0068. Similarly, on average, carbon emissions increases by 6.518e+01 per year."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Sri Lakshmi\n\n\nIntroduction\nHi this is Sri Lakshmi Sudha Ganni, I am currently pursuing my Master’s in Data Analytics from UTSA. My background is in chemical engineering with industry experience focused on chemical testing of water and waste water. I am passionate about data analysis and I am looking forward to work in the field of data analytics. As part of my Data Analytics Journey so far I have worked with R, python, SQL and SAS. I have explored machine learning techniques such as support vector machines, natural learning processing, clustering and regression. I have also worked on data visualization using ggplot2 and matplotlib. I have experience in data cleaning, data wrangling, data visualization, statistical analysis and machine learning.\nData Analytics Experience\nI have previously worked on projects focused on analysis of resources available for cancer patients. I am also working on a project which is focused on predicting the price of housing market in San Antonio. I am looking forward to work on more projects and gain more experience in the field of data analytics. I am also looking forward to work on projects which are focused on data visualization and machine learning. I am also interested in learning new technologies and tools in the field of data analytics.\nResearch Interest\nMy Primary area of interest is to work at the intersection of data analytics and chemical engineering. Specially application of machine learning techniques to analyze and discover underlying trends in chemical plant data and material testing.\nInteresting thing About Me\nA quirky and interesting thing about me is My passion for photography, especially focusing on capturing nature and landscapes. It offered a different perspective on observing and interpreting the world around me.\nHobbies\nI love playing Racquetball, trekking and passionate about Photography.\nMachine Learning & Art: Neural Networks for Artistic Use(Link)\nThis video tutorial provides an in-depth look at how neural networks can be used to apply artistic styles to images, a process known as style transfer. It’s a compelling example of how machine learning techniques are being used creatively to blend different artistic styles onto a canvas or photograph, essentially allowing the algorithm to “paint” one picture in the style of another artist."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\nWelcome to My Website\nSri Lakshmi - DA Portfolio\n",
    "section": "",
    "text": "Welcome to My Website\nSri Lakshmi - DA Portfolio\n\n\n\nIntroduction\nHi, I am Sri Lakshmi Sudha Ganni, currently pursuing my Master’s in Data Analytics from UTSA. My background is in chemical engineering with industry experience focused on chemical testing of water and wastewater. I am passionate about data analysis and looking forward to work in the field of data analytics. Throughout my journey, I have gained proficiency in R, Python, SQL, and SAS. I have explored machine learning techniques such as support vector machines, natural language processing, clustering, and regression, and have worked on data visualization using ggplot2 and matplotlib.\n\n\nData Analytics Experience\nI have worked on projects analyzing resources available for cancer patients and I’m currently focused on predicting the housing market prices in San Antonio. I am eager to work on more projects to enhance my experience in data analytics, especially those focusing on data visualization and machine learning.\n\n\nProjects\n\nCancer Patient health resources Analysis\n\n\n\n\n\n\n\nHousing Market Trends Modeling\n\n\n\nNatural Langugage Processing\n\n\n\n\nResearch Interest\nMy primary area of interest lies at the intersection of data analytics and chemical engineering. Specifically, I am keen on applying machine learning techniques to analyze and discover underlying trends in chemical plant data and material testing.\n\n\nHobbies\nIn my free time, I love playing Racquetball, trekking, and I am passionate about photography."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/sriganni-P2-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\nmydata$'Eye Color' = as.factor(mydata$'Eye Color')\ndplyr::glimpse(mydata)\n\nRows: 10\nColumns: 5\n$ Height      &lt;dbl&gt; 180, 175, 178, 183, 156, 166, 165, 133, 166, 154\n$ Weight      &lt;dbl&gt; 80, 70, 76, 55, 90, 110, NA, 45, 55, 50\n$ Gender      &lt;fct&gt; M, O, F, F, O, M, F, F, M, M\n$ Income      &lt;dbl&gt; 70000, 80000, 95000, 85000, 89000, 85000, 110000, 100000, …\n$ `Eye Color` &lt;fct&gt; brown, blue, hazel, blue, green, blue, blue, brown, hazel,…\n\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             10    \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  factor                   2     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique\n1 Gender                0             1 FALSE          3\n2 Eye Color             0             1 FALSE          5\n  top_counts                    \n1 F: 4, M: 4, O: 2              \n2 blu: 4, bro: 2, haz: 2, bla: 1\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate    mean      sd    p0    p25   p50\n1 Height                0           1     166.     15.1   133   158.   166\n2 Weight                1           0.9    70.1    21.2    45    55     70\n3 Income                0           1   87000   14614.  60000 81250  87000\n     p75   p100 hist \n1   177.    183 ▂▁▃▆▇\n2    80     110 ▇▂▃▂▂\n3 95750  110000 ▅▂▇▇▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram(stat=\"count\")\n\nWarning in geom_histogram(stat = \"count\"): Ignoring unknown parameters:\n`binwidth`, `bins`, and `pad`\n\nplot(p2)\n\nWarning: Removed 1 rows containing non-finite values (`stat_count()`).\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n\n\nWarning: Removed 1 rows containing non-finite values (`stat_count()`).\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 rows containing non-finite values (`stat_smooth()`).\nRemoved 1 rows containing missing values (`geom_point()`).\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\nBox Plot\n\nboxplotp = ggplot(mydata, aes(x = `Eye Color`, y = Height)) +\n  geom_boxplot()\nplot(boxplotp)\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"boxplot.png\")\nggsave(filename=figure_file, plot=boxplotp)\n\nSaving 7 x 5 in image\n\n\nScatter Plot\n\nscatterp = ggplot(mydata, aes(x = Weight, y = Income)) +\n  geom_point()\nplot(scatterp)\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"scatterplot.png\")\nggsave(filename=figure_file)\n\nSaving 7 x 5 in image\n\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Joaquin/School/DA - 6833 (Summer 2024)/sriganni-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n4 Income          Individual Income in usd              numeric value &gt;0 or NA\n5 BMI             Body mass index in kg/m2              numeric value &gt;0 or NA\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n$ Income &lt;dbl&gt; 70000, 80000, 90000, 95000, 75000, 85000, 89000, 85000, 92000, …\n$ BMI    &lt;dbl&gt; 24, 22, 22, 23, 24, 22, 36, 39, 22, 22, 22, 25, 19, 21\n\nsummary(rawdata)\n\n    Height              Weight          Gender              Income      \n Length:14          Min.   :  45.0   Length:14          Min.   : 60000  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.: 78500  \n Mode  :character   Median :  70.0   Mode  :character   Median : 87000  \n                    Mean   : 602.7                      Mean   : 86071  \n                    3rd Qu.:  90.0                      3rd Qu.: 94250  \n                    Max.   :7000.0                      Max.   :110000  \n                    NA's   :1                                           \n      BMI      \n Min.   :19.0  \n 1st Qu.:22.0  \n Median :22.0  \n Mean   :24.5  \n 3rd Qu.:24.0  \n Max.   :39.0  \n               \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender Income   BMI\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 180        80 M       70000    24\n2 175        70 O       80000    22\n3 sixty      60 F       90000    22\n4 178        76 F       95000    23\n5 192        90 NA      75000    24\n6 6          55 F       85000    22\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\nIncome\n0\n1.00\n86071.43\n12916.68\n60000\n78500\n87000\n94250\n110000\n▃▆▇▇▂\n\n\nBMI\n0\n1.00\n24.50\n5.72\n19\n22\n22\n24\n39\n▇▂▁▁▂\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nIncome\n0\n1.00\n85769.23\n13392.50\n60000\n78000.00\n85000\n95000\n110000\n▃▆▆▇▂\n\n\nBMI\n0\n1.00\n24.69\n5.91\n19\n22.00\n22\n24\n39\n▇▃▁▁▂\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nIncome\n0\n1.00\n85769.23\n13392.50\n60000\n78000.00\n85000\n95000\n110000\n▃▆▆▇▂\n\n\nBMI\n0\n1.00\n24.69\n5.91\n19\n22.00\n22\n24\n39\n▇▃▁▁▂\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nIncome\n0\n1\n84272.73\n12166.27\n60000\n77500.0\n85000\n93500.0\n100000\n▂▃▂▇▆\n\n\nBMI\n0\n1\n25.18\n6.34\n19\n22.0\n23\n24.5\n39\n▇▃▁▁▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nIncome\n0\n1\n84272.73\n12166.27\n60000\n77500.0\n85000\n93500.0\n100000\n▂▃▂▇▆\n\n\nBMI\n0\n1\n25.18\n6.34\n19\n22.0\n23\n24.5\n39\n▇▃▁▁▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nIncome\n0\n1\n84444.44\n12914.25\n60000\n80000\n85000\n95000\n100000\n▂▂▂▇▇\n\n\nBMI\n0\n1\n25.67\n6.96\n19\n22\n23\n25\n39\n▇▃▁▁▃\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Sri Lakshmi - DA Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  }
]